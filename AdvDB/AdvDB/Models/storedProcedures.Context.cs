//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdvDB.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FootballEntities : DbContext
    {
        public FootballEntities()
            : base("name=FootballEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<Fixture_Get_Result> Fixture_Get(Nullable<int> fixtureID)
        {
            var fixtureIDParameter = fixtureID.HasValue ?
                new ObjectParameter("FixtureID", fixtureID) :
                new ObjectParameter("FixtureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fixture_Get_Result>("Fixture_Get", fixtureIDParameter);
        }
    
        public virtual ObjectResult<Fixture_GetPlayersForFixture_Result> Fixture_GetPlayersForFixture(Nullable<int> fixtureID)
        {
            var fixtureIDParameter = fixtureID.HasValue ?
                new ObjectParameter("FixtureID", fixtureID) :
                new ObjectParameter("FixtureID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Fixture_GetPlayersForFixture_Result>("Fixture_GetPlayersForFixture", fixtureIDParameter);
        }
    
        public virtual int Player_Delete(Nullable<int> playerID)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_Delete", playerIDParameter);
        }
    
        public virtual int Player_Merge(Nullable<int> playerID, string firstname, string surname, Nullable<System.DateTime> dOB, Nullable<int> shirtNumber, string favouredFoot, Nullable<int> positionID, Nullable<int> rosterID, Nullable<int> setPieceID, Nullable<bool> deleted)
        {
            var playerIDParameter = playerID.HasValue ?
                new ObjectParameter("PlayerID", playerID) :
                new ObjectParameter("PlayerID", typeof(int));
    
            var firstnameParameter = firstname != null ?
                new ObjectParameter("Firstname", firstname) :
                new ObjectParameter("Firstname", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var dOBParameter = dOB.HasValue ?
                new ObjectParameter("DOB", dOB) :
                new ObjectParameter("DOB", typeof(System.DateTime));
    
            var shirtNumberParameter = shirtNumber.HasValue ?
                new ObjectParameter("ShirtNumber", shirtNumber) :
                new ObjectParameter("ShirtNumber", typeof(int));
    
            var favouredFootParameter = favouredFoot != null ?
                new ObjectParameter("FavouredFoot", favouredFoot) :
                new ObjectParameter("FavouredFoot", typeof(string));
    
            var positionIDParameter = positionID.HasValue ?
                new ObjectParameter("PositionID", positionID) :
                new ObjectParameter("PositionID", typeof(int));
    
            var rosterIDParameter = rosterID.HasValue ?
                new ObjectParameter("RosterID", rosterID) :
                new ObjectParameter("RosterID", typeof(int));
    
            var setPieceIDParameter = setPieceID.HasValue ?
                new ObjectParameter("SetPieceID", setPieceID) :
                new ObjectParameter("SetPieceID", typeof(int));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("Deleted", deleted) :
                new ObjectParameter("Deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Player_Merge", playerIDParameter, firstnameParameter, surnameParameter, dOBParameter, shirtNumberParameter, favouredFootParameter, positionIDParameter, rosterIDParameter, setPieceIDParameter, deletedParameter);
        }
    
        public virtual int Team_Delete(Nullable<int> teamID)
        {
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Team_Delete", teamIDParameter);
        }
    
        public virtual ObjectResult<Team_Get_Result> Team_Get(Nullable<int> teamID)
        {
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Team_Get_Result>("Team_Get", teamIDParameter);
        }
    
        public virtual int Team_Merge(Nullable<int> teamID, string name, Nullable<bool> deleted)
        {
            var teamIDParameter = teamID.HasValue ?
                new ObjectParameter("TeamID", teamID) :
                new ObjectParameter("TeamID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var deletedParameter = deleted.HasValue ?
                new ObjectParameter("Deleted", deleted) :
                new ObjectParameter("Deleted", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Team_Merge", teamIDParameter, nameParameter, deletedParameter);
        }
    }
}
